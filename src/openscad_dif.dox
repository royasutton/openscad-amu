/***************************************************************************//**
  \page openscad_dif_ht Command Line Help (openscad-dif)
  \include openscad-dif.help
*******************************************************************************/

/***************************************************************************//**
  \defgroup openscad_dif_src Source Code (openscad-dif)
  \brief
    The Doxygen input filter for \em OpenSCAD scripts.
*******************************************************************************/

/***************************************************************************//**
  \page openscad_dif_doc Program Usage (openscad-dif)


  \section openscad_dif_sm Documenting OpenSCAD scripts

  This filter may be used to markup OpenSCAD scripts for use with
  Doygen. See [Documenting the code][docblocks] in the Doxygen manual
  for information.

  [docblocks]: http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html


  \subsection openscad_dif_sm_cs Comment Sections

  Comment patters are identified according to the rules in the
  following table. See the flex documentation on [patterns] for more
  information.

   patterns   | behavior
  :----------:|:--------------------------------
   "//"       | comment. ignored by filter.
   "//"[/!]?  | documentation pass to Doxygen.
   "/*"[*!]?  | open a comment block.
   "*"+"/"    | close comment block.

  The filter provides additional command functions that take the form:

  \code{.C}
  \amu_<function> <variable> ( <arguments> )
  \endcode

  The \em variable must be the first word that follows the function name,
  but does not have to be on the same line if present. The \em arguments,
  including the opening and closing parenthesis can also be split across
  any number of lines. The \em arguments may be blank, however, the
  parenthesis are required.

  [patterns]: http://flex.sourceforge.net/manual/Patterns.html


  \subsection openscad_dif_sm_v Variabes

  The result of the function will be inserted into the output of the
  input file being filtered unless an optional results variable name
  follows the function name. When a variable name is provided, the
  command function's result is written to the specified variable and
  is not to copied the filters output.

  These variables can be referenced in the context of other function
  \em arguments of the filtered input file. A variable is referenced
  using the form: <tt>${VAR}</tt>. Variable expansions are recursive and
  expansion can be postponed using expansion escaping of the form:
  <tt>\\${VAR}</tt>.


  \subsection openscad_dif_sm_a Arguments

  Arguments are function dependent, however, there are four categories
  that may be used by any particular function. These are summarized
  in the following table:

  Type        | Example
  :-----------|:---------------:
  positional  | value
  named       | name=value
  flag        | ++flag /--flag
  incr/decr   | var++ / var--


  \subsection openscad_dif_sm_adc Additional Doxygen Commands

  In addition to the normal Doxygen [special commands], here is a list
  of additional filter-provided commands that can be used for document
  markup:

  | Internal Commands                                                 | Description
  |:------------------------------------------------------------------|:---------------------------------
  | \ref ODIF::ODIF_Scanner::def_init()         "\\amu_define"        | define text macro
  | \ref ODIF::ODIF_Scanner::bif_eval()         "\\amu_eval"          | evaluate arguments
  | \ref ODIF::ODIF_Scanner::bif_shell()        "\\amu_shell"         | execute shell command
  | \ref ODIF::ODIF_Scanner::bif_combine()      "\\amu_combine"       | combine words
  | \ref ODIF::ODIF_Scanner::bif_table()        "\\amu_table"         | generate a text table
  | \ref ODIF::ODIF_Scanner::bif_image_table()  "\\amu_image_table"   | generate an image table
  | \ref ODIF::ODIF_Scanner::bif_viewer()       "\\amu_viewer"        | file viewer
  | \ref ODIF::ODIF_Scanner::bif_make()         "\\amu_make"          | make script interface
  | \ref ODIF::ODIF_Scanner::bif_copy()         "\\amu_copy"          | copy references
  | \ref ODIF::ODIF_Scanner::bif_find()         "\\amu_find"          | search for output files
  | \ref ODIF::ODIF_Scanner::bif_scope()        "\\amu_scope"         | query scope data
  | \ref ODIF::ODIF_Scanner::bif_source()       "\\amu_source"        | query source filename
  | \ref ODIF::ODIF_Scanner::bif_source()       "\\amu_pathid"        | generate source path identifier

  External commands also exists and can be found in the directory:
  <tt><install-prefix>/functions/</tt>. Here is a list:

  | External Commands                 | Description
  |:----------------------------------|:--------------------------------
  | \\amu_date                        | current date and/or time
  | \\amu_list                        | format arguments into a list

  [special commands]: http://www.stack.nl/~dimitri/doxygen/manual/commands.html


  \subsection openscad_dif_sm_me Example Markup

  \verbatim
  //
  // This comment will not be passed to Doxygen.
  //

  //! \ingroup the_group_name
  //! @{

  //! Parameterized vehicle design module.
  /***************************************************************//**
   * \param <string> name       Table name.
   * \param <string> translate  String of integers.
   *
   * \details
   *   For a complete list of color names see the World Wide Web
   *   consortium's
   ******************************************************************/
   module example() { }

  /***************************************************************//**
   * \page imt Image Table
   *
   * \amu_define  var1  ( table_of_all )
   * \amu_shell   var2  ( "seq -f 'Col (%g)' -s '^' 10" )
   * \amu_define  var3  ( Table of all Generated Images. )
   * \amu_shell   var4  ( "seq -f 'h%g' -s '^' 84" )
   * \amu_combine var5  ( joiner=" " separator="^" tokenizer=" " prefix="a"
   *                      "car truck van"
   *                      "with" "12 17" "wheels" "thats"
   *                      "blue, green," "viewed" "from"
   *                      "right. bottom. diagonal. left. front. back. top." )
   * \amu_make    var6  ( append=test extension=png )
   *
   * \htmlonly
   *   \amu_image_table ( type=html
   *                      id="${var1}" table_caption="${var3}"
   *                      columns="10" column_headings="${var2}"
   *                      cell_captions="${var4}"
   *                      cell_files="${var6}" image_width="92"
   *                      cell_titles="${var5}" )
   * \endhtmlonly
  ******************************************************************/

  //! @}
  \endverbatim


  \subsection openscad_dif_sm_afc Adding Filter Commands

  Additional internal commands can be added to the filter by coding the
  function in C++ and incorporating it into the source. External
  functions can also be incorporated using any language that can operate
  on standard input and write to the standard output.

  External functions can be found at:

  \code{.C}
  <install-prefix>/functions/amu_<function>
  \endcode

  When the filter encounters a command of the form
  <tt>amu_<function></tt> that it does not recognize, it checks this
  location and if it finds a match this external command is called to
  handle the command. See examples there as a starting point.

*******************************************************************************/

//
// eof
//
