#!/usr/bin/make -f
################################################################################
#
#  Copyright (C) 2016-2018 Roy Allen Sutton
#
#  This file is part of OpenSCAD AutoMake Utilities ([openscad-amu]
#  (https://royasutton.github.io/openscad-amu)).
#
#  openscad-amu is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  openscad-amu is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  [GNU General Public License] (https://www.gnu.org/licenses/gpl.html)
#  for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with openscad-amu.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

################################################################################
# Rules
################################################################################

#------------------------------------------------------------------------------#
# Build Targets
#------------------------------------------------------------------------------#

.PHONY:	all-doxygen
all-doxygen: $(doxygen_stamp) $(if $(generate_latex),$(latex_stamp))
	$(call target_end)

# auto-configuration file
# depends on $(scopes_mf) since image_path=$(call scopes_targetsdir)
$(doxygen_config_auto): $(src_files) $(scopes_mf) | $(doxygen_output_path)
	$(call target_begin)
	$(file >$(doxygen_config_auto),$(doxygen_config_auto_text))

# make dependent on project files as configured
ifeq ($(targets_depends_project),$(true))
$(doxygen_config_auto): $(doxygen_config_src) $(MAKEFILE_LIST) $(project_files_add)
endif

# doxygen
$(doxygen_stamp): $(doxygen_config_auto)
	$(call target_begin)
	$(cat) $(doxygen_config_auto) $(doxygen_config) | $(path_doxygen) - \
	&& $(touch) $(doxygen_stamp)

# make dependent on scope targets as configured
ifeq ($(doxygen_depends_scopes),$(true))
$(doxygen_stamp): $(scopes_stamp)
endif

# latex
$(latex_stamp): $(doxygen_stamp)
	$(call target_begin)
	( cd $(doxygen_output_path)$(latex_output) && make ) \
	&& $(touch) $(latex_stamp)

# create target directories (iff not empty)
ifneq ($(doxygen_output_path),$(empty))
$(doxygen_output_path): ; $(mkdir_p) $@
endif

#------------------------------------------------------------------------------#
# Clean Targets
#------------------------------------------------------------------------------#

.PHONY: clean-doxygen
clean-doxygen:
	$(call target_begin)
	-$(rm_f) $(doxygen_clean_files)
	-($(strip $(if $(doxygen_output_path),cd $(doxygen_output_path) &&) \
		$(rm_rf) \
			$(if $(generate_html),$(html_output)) \
			$(if $(generate_latex),$(latex_output)) \
			$(if $(generate_man),$(man_output)) \
	))
	-$(if $(doxygen_output_path),$(rmdir_p) $(doxygen_output_path))

#------------------------------------------------------------------------------#
# Install / Uninstall Targets
#------------------------------------------------------------------------------#

.PHONY: install-doxygen
install-doxygen:
	$(call target_end)

.PHONY: uninstall-doxygen
uninstall-doxygen:
	$(call target_end)

################################
# HTML FORMATTED DOCUMENTATION #
################################
ifeq ($(generate_html),$(true))
.PHONY: install-doxygen-html uninstall-doxygen-html
install-doxygen: install-doxygen-html
uninstall-doxygen: uninstall-doxygen-html

# install ordering
install-doxygen-html: install-doxygen-html-files install-doxygen-update-html-index
	$(call target_end)

# copy files
install-doxygen-html-files: $(doxygen_stamp) | $(install_prefix_html) $(install_prefix_html)$(docs_install_id)
	$(call target_begin)
	( \
		cd $(doxygen_output_path) && \
		$(cp_a) $(html_output) $(install_prefix_html)$(docs_install_id) \
	)

# create toc entry and update index
install-doxygen-update-html-index: | $(install_prefix_html)$(docs_install_id)
	$(call target_begin)
	$(call doxygen_index_write_info,$(install_prefix_html),$(docs_install_id))
	$(call doxygen_index_html_update,$(install_prefix_html))

# create install directories
$(install_prefix_html): ; $(mkdir_p) $@
$(install_prefix_html)$(docs_install_id): ; $(mkdir_p) $@

# uninstall ordering
uninstall-doxygen-html: uninstall-doxygen-html-files doxygen-update-html-index
	$(call target_end)

# remove files
uninstall-doxygen-html-files:
	$(call target_begin)
	-( \
		cd $(install_prefix_html) && \
		$(rm_rf) $(docs_install_id) \
	)

# update index
doxygen-update-html-index:
	$(call target_begin)
	$(call doxygen_index_html_update,$(install_prefix_html))
endif

###############################
# PDF FORMATTED DOCUMENTATION #
###############################
ifeq ($(generate_latex),$(true))
.PHONY: install-doxygen-pdf uninstall-doxygen-pdf
install-doxygen: install-doxygen-pdf
uninstall-doxygen: uninstall-doxygen-pdf

# install ordering
install-doxygen-pdf: install-doxygen-pdf-files install-doxygen-update-pdf-index
	$(call target_end)

# copy files
install-doxygen-pdf-files: $(latex_stamp) | $(install_prefix_pdf) $(install_prefix_pdf)$(docs_install_id)
	$(call target_begin)
	( \
		cd $(doxygen_output_path)$(latex_output) && \
		$(cp_a) \
			refman.pdf \
			$(install_prefix_pdf)$(docs_install_id)$(dir_level_sep)$(docs_install_id).pdf \
	)

# create toc entry and update index
install-doxygen-update-pdf-index: | $(install_prefix_pdf)$(docs_install_id)
	$(call target_begin)
	$(call doxygen_index_write_info,$(install_prefix_pdf),$(docs_install_id))
	$(call doxygen_index_pdf_update,$(install_prefix_pdf))

# create install directories
$(install_prefix_pdf): ; $(mkdir_p) $@
$(install_prefix_pdf)$(docs_install_id): ; $(mkdir_p) $@

# uninstall ordering
uninstall-doxygen-pdf: uninstall-doxygen-pdf-files doxygen-update-pdf-index
	$(call target_end)

# remove files
uninstall-doxygen-pdf-files:
	$(call target_begin)
	-( \
		cd $(install_prefix_pdf) && \
		$(rm_rf) $(docs_install_id) \
	)

# update index
doxygen-update-pdf-index:
	$(call target_begin)
	$(call doxygen_index_pdf_update,$(install_prefix_pdf))
endif

###############################
# MAN FORMATTED DOCUMENTATION #
###############################
ifeq ($(generate_man),$(true))
.PHONY: install-doxygen-man uninstall-doxygen-man
install-doxygen: install-doxygen-man
uninstall-doxygen: uninstall-doxygen-man

install-doxygen-man: $(doxygen_stamp) | $(install_prefix_man) $(install_prefix_man)$(man_subdir)
	$(call target_begin)
	$(foreach f, \
		$(wildcard $(doxygen_output_path)$(man_output)$(dir_level_sep)$(man_subdir)$(dir_level_sep)*), \
		$(call execute_command, \
			$(cp_a) \
				$f \
				$(install_prefix_man)$(man_subdir)$(dir_level_sep)$(docs_install_id)-$(notdir $f) \
		) \
	)

# create install directories
$(install_prefix_man): ; $(mkdir_p) $@
$(install_prefix_man)$(man_subdir): ; $(mkdir_p) $@

uninstall-doxygen-man: $(doxygen_stamp)
	$(call target_begin)
	$(foreach f, \
		$(wildcard $(doxygen_output_path)$(man_output)$(dir_level_sep)$(man_subdir)$(dir_level_sep)*), \
		$(call execute_command, \
			$(rm_f) \
				$(install_prefix_man)$(man_subdir)$(dir_level_sep)$(docs_install_id)-$(notdir $f) \
		) \
	)
	-( \
		cd $(install_prefix_man) && \
		$(rmdir_p) $(man_subdir) \
	)
endif

#------------------------------------------------------------------------------#
# Information Targets
#------------------------------------------------------------------------------#

.PHONY: info-doxygen
info-doxygen: | silent
	$(call heading1, Doxygen Information)
	$(call list_variables,$(doxygen_control_variables),$(true), control)
	$(call list_variables,$(doxygen_config_variables),$(false), variables)
	$(call list_variables,$(doxygen_config_derived),$(false), derived)
	$(call enumerate_variable,doxygen_commands_configured,$(true),$(true))
	$(call heading2, [ auto-configuration [$(doxygen_config_auto)] ] *,=,*)
	$(info $(doxygen_config_auto_text))

################################################################################
# eof
################################################################################
