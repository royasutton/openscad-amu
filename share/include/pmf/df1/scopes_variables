#!/usr/bin/make -f
################################################################################
#
#  Copyright (C) 2016-2017 Roy Allen Sutton
#
#  This file is part of OpenSCAD AutoMake Utilities ([openscad-amu]
#  (https://royasutton.github.io/openscad-amu)).
#
#  openscad-amu is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  openscad-amu is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  [GNU General Public License] (https://www.gnu.org/licenses/gpl.html)
#  for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with openscad-amu.  If not, see <http://www.gnu.org/licenses/>.
#
################################################################################

################################################################################
# Variables
################################################################################

# auxiliary script output path prefix
scopes_prefix := $(if $(call bool_decode,$(prefix_scopes_scripts)),$(output_path))

# openscad_seam_opts1: for modes=(extract|list)
openscad_seam_opts1 := \
  $(strip \
    --joiner $(scopes_joiner) \
    --makefile-ext $(mf_ext) \
    --mfscript-ext $(mfs_ext) \
    --openscad-ext $(scad_ext) \
  )

# openscad_seam_opts1: for modes=(extract)
openscad_seam_opts2 := \
  $(strip \
    --prefix $(output_path) \
    --prefix-ipp 0 \
    --prefix-scripts $(if $(call bool_decode,$(prefix_scopes_scripts)),yes,no) \
    $(if $(seam_defines),$(addprefix --define$(space),$(seam_defines))) \
    --comments yes \
    --show $(if $(call bool_decode,$(verbose_seam_show)),yes,no) \
    --run no \
    --make no \
    $(if $(AMU_LIB_PATH),--lib-path $(AMU_LIB_PATH)) \
    --openscad-path $(path_openscad) \
    --bash-path $(path_bash) \
    --make-path $(path_gnumake) \
    --write-config yes \
    $(if $(call bool_decode,$(debug_seam_scanner)),--debug) \
    $(if $(call bool_decode,$(verbose_seam)),--verbose) \
    $(if $(seam_opts_add),$(seam_opts_add)) \
  )

# user-defined library path
scad_lib_path := $(call join_with,$(env_field_sep), \
  . \
  $(if $(dir $1),$(dir $1)) \
  $(if $(library_prefix),$(library_prefix)) \
  $(if $(design_prefix),$(design_prefix)) \
  $(if $(scad_lib_path_add),$(scad_lib_path_add)) \
  $(if $(OPENSCADPATH),$(OPENSCADPATH)) \
  ,$(true))

# scopes auxiliary scripts for all source files
scopes_scripts_source := \
  $(addprefix $(scopes_prefix), \
    $(foreach s,$(src_files), \
      $(shell $(path_openscad_seam) --mode list --input $s $(openscad_seam_opts1)) \
    ) \
  )

# scopes include filter
ifndef scopes_include_filter
  ifdef scopes_include
    scopes_include_filter := $(strip $(foreach s, $(scopes_include), \
      %$(scopes_joiner)$(s)$(scad_ext) %$(scopes_joiner)$(s)$(mfs_ext)))
  else
    scopes_include_filter := %
  endif
else
  $(call amu_pm_m,using pre-defined value for $$(scopes_include_filter))
endif

# scopes exclude filter
ifndef scopes_exclude_filter
  ifdef scopes_exclude
    scopes_exclude_filter := $(strip $(foreach s, $(scopes_exclude), \
      %$(scopes_joiner)$(s)$(scad_ext) %$(scopes_joiner)$(s)$(mfs_ext)))
  else
    scopes_exclude_filter := $(empty)
  endif
else
  $(call amu_pm_m,using pre-defined value for $$(scopes_exclude_filter))
endif

# apply include and exclude filter
scopes_scripts_selected := \
  $(filter $(scopes_include_filter), \
  $(filter-out $(scopes_exclude_filter), \
    $(scopes_scripts_source) \
  ))

# assign all source auxiliary scripts to clean-files
scopes_clean_files := $(scopes_scripts_source)

# release files
ifeq ($(release_scopes),$(true))
  release_files += $(call scopes_targetsdir)
endif

# release archive files
ifeq ($(release_archive_scopes),$(true))
  release_archive_files += $(call scopes_targetsdir)
endif

#------------------------------------------------------------------------------#
# Configuration Variable List
#------------------------------------------------------------------------------#

scopes_config_variables := \
  scopes_joiner \
  \
  scopes_include \
  scopes_exclude \
  \
  seam_defines \
  seam_opts_add \
  \
  scad_lib_path_add

scopes_config_derived += \
  scopes_prefix \
  \
  scopes_include_filter \
  scopes_exclude_filter \
  \
  openscad_seam_opts1 \
  openscad_seam_opts2 \
  \
  scad_lib_path

#------------------------------------------------------------------------------#
# Version Checks
#------------------------------------------------------------------------------#
ifeq ($(version_checks),$(true))

# openscad-seam v1.5 or later required to auto-extract scope names
$(call check_version,amuseam,ge,1.5,$(true), \
$(newline)# \
$(newline)#$(space3)openscad-seam '--mode scopes' option required to auto-extract scope \
$(newline)#$(space3)names. Option introduced in version v1.5. \
$(newline)#)

endif

#------------------------------------------------------------------------------#
# Help Text
#------------------------------------------------------------------------------#

define help_text_scopes
 all-scopes:
     build all openscad-amu scope components.

 clean-scopes:
     clean all openscad-amu scope components.

 install-scopes:
     nothing.

 uninstall-scopes:
     nothing.

 info-scopes:
     scope components information.
endef

################################################################################
# eof
################################################################################
